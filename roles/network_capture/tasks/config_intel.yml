---
- name: Ensure we have facts for our interface
  assert:
    that: "ansible_{{ intel_ifname }} is defined"
    fail_msg: "Could not find facts for interface {{ intel_ifname }}"

- name: Get NUMA node
  slurp:
    src: "/sys/class/net/{{ intel_ifname }}/device/numa_node"
  register: numa_node64

- name: Set NUMA node fact
  set_fact:
    numa_node: "{{ numa_node64['content'] | b64decode | trim }}"

- name: Get CPU list
  slurp:
    src: "/sys/devices/system/node/node{{ numa_node }}/cpulist"
  register: cpu_list64

- name: Set some facts that we'll need
  set_fact:
    capture_nic_affinity: "{{ cpu_list64['content'] | b64decode | trim }}"
    intel_queues: "{{ ansible_processor_cores }}"
    intel_hash_key_pattern: ["6D", "5A"]
    intel_hash_key_length: 52
    intel_rx_ring_size: 4096
    intel_hash_opts: sd

- name: Set the hash key to the right multiple
  set_fact:
    _intel_hkey_mult: "{{ intel_hash_key_length/(intel_hash_key_pattern | length) }}"

- name: Extend the hash key to the full length
  set_fact:
    _intel_hkey_list: "{{ intel_hash_key_pattern * (_intel_hkey_mult|int) }}"

- name: Build the final hash key
  set_fact:
    _intel_hkey: "{{ _intel_hkey_list | join(':') | lower }}"

- name: Copy irq_affinity script
  copy:
    src: set_irq_affinity
    dest: /usr/local/sbin/
    owner: root
    group: root
    mode: '0755'
  become: true

- name: Create device configuration unit
  template:
    src: "intel_systemd.j2"
    dest: "/etc/systemd/system/intel_config_{{ intel_ifname }}.service"
    owner: root
    group: root
  become: true

- name: Enable our service
  systemd:
    name: "intel_config_{{ intel_ifname }}.service"
    enabled: yes
    daemon_reload: yes
    started: yes
  become: true
