---
- name: Uninstall old myri_snf RPM
  package:
    name: myri_snf
    state: absent
  become: true

- name: Create base directory
  file:
    path: /opt/snf
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true

- name: Check to see if our installed SNF driver matches our desired
  set_fact:
    snf_driver_mismatch: ansible_local.nics[0].snf_driver_version is not defined or (ansible_local.nics[0].snf_driver_version != snfv3_version and ansible_local.nics[0].snf_driver_version != snfv5_version)

- name: Install SNFv3 driver
  unarchive:
    src: "{{ snfv3_url }}"
    dest: /opt/snf
    remote_src: yes
    extra_opts:
    - --strip-components=1
  when: ansible_local.nics[0].sniffer_driver == "snfv3" and snf_driver_mismatch
  become: true
  register: snf3_install

- name: Install SNFv5 driver
  unarchive:
    src: "{{ snfv5_url }}"
    dest: /opt/snf
    remote_src: yes
    extra_opts:
    - "--strip-components=1"
  when: ansible_local.nics[0].sniffer_driver == "snfv5" and snf_driver_mismatch
  become: true
  register: snf5_install

- name: Build SNF driver
  include: build_snf_driver.yml
  when: snf3_install.changed or snf5_install.changed or capture_iface is not defined

- name: Copy udev rules
  copy:
    src: /opt/snf/sbin/myri_snf.udev.rules
    dest: /etc/udev/rules.d/
    remote_src: true
    owner: root
    group: root
    mode: '0644'
  when: ansible_local.nics[0].sniffer_driver == "snfv5"
  become: true

- name: Add SNF lib dir to ld.so.conf
  copy:
    dest: /etc/ld.so.conf.d/myri_snf.conf
    content: "/opt/snf/lib\n"
    owner: root
    group: root
    mode: '0644'
  become: true
  notify: ldconfig

- name: Force handlers to run, to regather NIC facts
  meta: flush_handlers

- name: Check if SNF detected a connected port
  assert:
    that: capture_iface is defined
    fail_msg: Driver successfully installed, but could not find a port

- name: Ensure that we have our start/stop script
  copy:
    src: /opt/snf/sbin/myri_start_stop.orig
    dest: /opt/snf/sbin/myri_start_stop
    remote_src: true
    owner: root
    group: root
    mode: '0755'
  become: true

- name: Copy systemd service file
  copy:
    src: /opt/snf/sbin/myri_start_stop.service
    dest: "/etc/systemd/system/tuning_{{ capture_iface.iface }}.service"
    remote_src: true
    owner: root
    group: root
    mode: '0755'
  become: true
